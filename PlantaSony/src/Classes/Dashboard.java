/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Classes;

import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.statistics.HistogramDataset;

/**
 *
 * @author ponsa
 */
public class Dashboard extends javax.swing.JFrame {
    
    public static int runNumber;
    public static String productionPlant;
    public static boolean employeeDistribution;
    public static long totalSalary;
    public static long totalEgging;
    public static long totalProduction;
    public static long totalRevenue;
    public static long throughput; //unidades producidas entre tiempo de produccion
    
    

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        HelloGeb = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lineChartThroughput = new javax.swing.JPanel();
        barChartProduction = new javax.swing.JPanel();
        barChartSalary = new javax.swing.JPanel();
        barChartEgging = new javax.swing.JPanel();
        lineChartRevenue = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 0, 51));

        HelloGeb.setBackground(new java.awt.Color(255, 255, 255));
        HelloGeb.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        HelloGeb.setForeground(new java.awt.Color(255, 255, 255));
        HelloGeb.setText("Bienvenido, Gebrayel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1616, Short.MAX_VALUE)
                .addComponent(HelloGeb)
                .addGap(119, 119, 119))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(HelloGeb)
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1930, 80));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 220, 940));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de corrida", "Planta", "Se cambio la distribucion de empleados?", "Costo total en salarios", "Tiempo ocioso total", "Produccion total", "Total ingresos", "Throughput"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 1710, 210));

        lineChartThroughput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lineChartThroughput.setLayout(new java.awt.BorderLayout());
        getContentPane().add(lineChartThroughput, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 680, 420, 310));

        barChartProduction.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barChartProduction.setLayout(new java.awt.BorderLayout());
        getContentPane().add(barChartProduction, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 420, 310));

        barChartSalary.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barChartSalary.setLayout(new java.awt.BorderLayout());
        getContentPane().add(barChartSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 330, 420, 310));

        barChartEgging.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        barChartEgging.setLayout(new java.awt.BorderLayout());
        getContentPane().add(barChartEgging, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 330, 420, 310));

        lineChartRevenue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lineChartRevenue.setLayout(new java.awt.BorderLayout());
        getContentPane().add(lineChartRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 680, 420, 310));

        setSize(new java.awt.Dimension(1946, 1031));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }
    

    public void getValues(){
        
    }
    
    public void showTable(Object[][] table){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < table.length; i++) {
                    model.addRow(table[i]);
        }
    }
    public void showPieChart(){
        
        //create dataset
      DefaultPieDataset barDataset = new DefaultPieDataset( );
//      barDataset.setValue( "IPhone 5s" , new Double( 20 ) );  
//      barDataset.setValue( "SamSung Grand" , new Double( 20 ) );   
//      barDataset.setValue( "MotoG" , new Double( 40 ) );    
//      barDataset.setValue( "Nokia Lumia" , new Double( 10 ) );  
      
      //create chart
       JFreeChart piechart = ChartFactory.createPieChart("mobile sales",barDataset, false,true,false);//explain
      
        PiePlot piePlot =(PiePlot) piechart.getPlot();
      
       //changing pie chart blocks colors
//       piePlot.setSectionPaint("IPhone 5s", new Color(255,255,102));
//        piePlot.setSectionPaint("SamSung Grand", new Color(102,255,102));
//        piePlot.setSectionPaint("MotoG", new Color(255,102,153));
//        piePlot.setSectionPaint("Nokia Lumia", new Color(0,204,204));
      
       
        piePlot.setBackgroundPaint(Color.white);
        
        //create chartPanel to display chart(graph)
        ChartPanel barChartPanel = new ChartPanel(piechart);
//        panelBarChart.removeAll();
//        panelBarChart.add(barChartPanel, BorderLayout.CENTER);
//        panelBarChart.validate();
    }

    /*=============================================================================*/
    
    public void showLineChartRevenue(Object[][] table){
        //create dataset for the graph
        
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < table.length; i++) {
            long amount = (long) table[i][6];
            int corrida = (int) table[i][0];
            dataset.setValue(amount, "Amount", "Corrida " + corrida);
        }
        
        //create chart
        JFreeChart linechart = ChartFactory.createLineChart("Ingresos","Corrida","Cantidad", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot lineCategoryPlot = linechart.getCategoryPlot();
        lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        lineCategoryPlot.setBackgroundPaint(Color.white);
        
        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
        Color lineChartColor = new Color(204,0,51);
        lineRenderer.setSeriesPaint(0, lineChartColor);
        
         //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        lineChartRevenue.removeAll();
        lineChartRevenue.add(lineChartPanel, BorderLayout.CENTER);
        lineChartRevenue.validate();
    }
    
    public void showLineChartThroughput(Object[][] table){
        //create dataset for the graph
        
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < table.length; i++) {
            long amount = (long) table[i][7];
            int corrida = (int) table[i][0];
            dataset.setValue(amount, "Amount", "Corrida " + corrida);
        }
        
        //create chart
        JFreeChart linechart = ChartFactory.createLineChart("Throughput","Corrida","Cantidad", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        //create plot object
         CategoryPlot lineCategoryPlot = linechart.getCategoryPlot();
        lineCategoryPlot.setRangeGridlinePaint(Color.BLUE);
        lineCategoryPlot.setBackgroundPaint(Color.white);
        
        //create render object to change the moficy the line properties like color
        LineAndShapeRenderer lineRenderer = (LineAndShapeRenderer) lineCategoryPlot.getRenderer();
        Color lineChartColor = new Color(204,0,51);
        lineRenderer.setSeriesPaint(0, lineChartColor);
        
         //create chartPanel to display chart(graph)
        ChartPanel lineChartPanel = new ChartPanel(linechart);
        lineChartThroughput.removeAll();
        lineChartThroughput.add(lineChartPanel, BorderLayout.CENTER);
        lineChartThroughput.validate();
    }

    /*========================================================================================*/
    
    public void showHistogram(){
        
         double[] values = { 95, 49, 14, 59, 50, 66, 47, 40, 1, 67,
                            12, 58, 28, 63, 14, 9, 31, 17, 94, 71,
                            49, 64, 73, 97, 15, 63, 10, 12, 31, 62,
                            93, 49, 74, 90, 59, 14, 15, 88, 26, 57,
                            77, 44, 58, 91, 10, 67, 57, 19, 88, 84                                
                          };
 
 
        HistogramDataset dataset = new HistogramDataset();
        dataset.addSeries("key", values, 20);
        
         JFreeChart chart = ChartFactory.createHistogram("JFreeChart Histogram","Data", "Frequency", dataset,PlotOrientation.VERTICAL, false,true,false);
            XYPlot plot= chart.getXYPlot();
        plot.setBackgroundPaint(Color.WHITE);

        
        
        ChartPanel barpChartPanel2 = new ChartPanel(chart);
//        jPanel3.removeAll();
//        jPanel3.add(barpChartPanel2, BorderLayout.CENTER);
//        jPanel3.validate();
    }

    /*========================================================================================*/
    
    public void showBarChartProduction(Object[][] table){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < table.length; i++) {
            long amount = (long) table[i][5];
            int corrida = (int) table[i][0];
            dataset.setValue(amount, "Amount", "Corrida " + corrida);
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Produccion","Corrida","Cantidad", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        CategoryPlot categoryPlot = chart.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.BLUE);
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(204,0,51);
        renderer.setSeriesPaint(0, clr3);
        
        ChartPanel barpChartPanel = new ChartPanel(chart);
        barChartProduction.removeAll();
        barChartProduction.add(barpChartPanel, BorderLayout.CENTER);
        barChartProduction.validate();
    }
    
        public void showBarChartSalary(Object[][] table){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            for (int i = 0; i < table.length; i++) {
            long amount = (long) table[i][3];
            int corrida = (int) table[i][0];
            dataset.setValue(amount, "Amount", "Corrida " + corrida);
            }
     
        JFreeChart chart = ChartFactory.createBarChart("Costo total salarios","Corrida","Cantidad", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        CategoryPlot categoryPlot = chart.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.BLUE);
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(204,0,51);
        renderer.setSeriesPaint(0, clr3);
        
        ChartPanel barpChartPanel = new ChartPanel(chart);
        barChartSalary.removeAll();
        barChartSalary.add(barpChartPanel, BorderLayout.CENTER);
        barChartSalary.validate();
    }
        
        public void showBarChartEgging(Object[][] table){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < table.length; i++) {
            long amount = (long) table[i][4];
            int corrida = (int) table[i][0];
            dataset.setValue(amount, "Amount", "Corrida " + corrida);
            }
        
        JFreeChart chart = ChartFactory.createBarChart("Tiempo ocioso total","Corrida","Cantidad", 
                dataset, PlotOrientation.VERTICAL, false,true,false);
        
        CategoryPlot categoryPlot = chart.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.BLUE);
        categoryPlot.setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) categoryPlot.getRenderer();
        Color clr3 = new Color(204,0,51);
        renderer.setSeriesPaint(0, clr3);
        
        ChartPanel barpChartPanel = new ChartPanel(chart);
        barChartEgging.removeAll();
        barChartEgging.add(barpChartPanel, BorderLayout.CENTER);
        barChartEgging.validate();
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HelloGeb;
    private javax.swing.JPanel barChartEgging;
    private javax.swing.JPanel barChartProduction;
    private javax.swing.JPanel barChartSalary;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel lineChartRevenue;
    private javax.swing.JPanel lineChartThroughput;
    // End of variables declaration//GEN-END:variables
}
